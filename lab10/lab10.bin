; Arnav Mehta
; 11/11/2021
; read in decimal numbers from specified memory locations, and
; check whether or not they are positive.
; if the number is positive, add it to the current value in R5.
; if the number is negative, begin processing the next number.
; after all 10 numbers are processed, the sum is stored in R5.
 
; R0 holds the current number in the list of numbers being processed.
; R3 holds the address of the memory location holding the current number.
; R4 holds the counter-value, or how many numbers still need to be processed.
; R5 holds the current sum of the positive numbers.

0011 0001 0000 0000 ; x3100 - starting address of the program

0101 101 101 1 00000    ; R5 <- 0			clear current value                      
1110 011 000110000      ; R3 <- PC* + x0030		put x3132 into R3
0001 100 101 1 01010    ; R4 <- 10			put x000A in R4
0110 000 011 000000     ; R0 <- M[R3]			load number into R0
0001 000 000 1 00000    ; R0 <- R0			add 0 to R0
0000 100 000000001      ; if n, PC <- PC* + x0001       check if > 0
0001 101 101 0 00 000   ; R5 <- R0 + R5			add number to R5                
0001 011 011 1 00001    ; R3 <- R3 + 1			add x0001 to R3
0001 100 100 1 11111    ; R4 <- R4 - 1			subtract x0001 from R4
0000 001 111111001      ; if p, PC <- PC* + xFFF9       check if R4 > 0
1111 0000 0010 0101     ; PC = M[x0025]			halt program
